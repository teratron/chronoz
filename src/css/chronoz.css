
@import url("https://fonts.googleapis.com/css?family=Anton|Nunito:200,300,400,600,700,800,900|Quicksand:300,400,500,700|Roboto:100,300,400,500,700,900|Montserrat:300,400,500,600,700,800|Raleway:100,200,300,400,600,700,800,900");
@import url("https://fonts.googleapis.com/css?family=Droid+Sans");
@import url("https://use.fontawesome.com/releases/v5.7.0/css/all.css");

/***************************************
  Root
 ***************************************/
*, :before, :after, ::before, ::after {
  position: relative;
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

html {
  font-family: sans-serif;
  font-size: 10px;
  height: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

body {
  font-size: 1.2rem;
  font-family: "Roboto", "Anton", sans-serif;
  font-weight: 300;
  line-height: 2rem;
  min-height: 100%;
  margin: 0;
  overflow-x: hidden;
  z-index: 1; }

/******************************************************************************
 Layout
 ------------------------------------------------------------------------------
 gap, pad
 ******************************************************************************/
.row, .col {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.grid, .row > .bar, .col > .bar {
  display: grid; }

.row {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }

.col {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column; }

.bar {
  display: inline-grid;
  grid-auto-flow: column;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

/***************************************
  Cell
 ***************************************/
.cell-1 {
  width: 85px;
  max-width: 85px; }

.cell-2 {
  width: 170px;
  max-width: 170px; }

.cell-3 {
  width: 255px;
  max-width: 255px; }

.cell-4 {
  width: 340px;
  max-width: 340px; }

.cell-5 {
  width: 425px;
  max-width: 425px; }

.cell-6 {
  width: 510px;
  max-width: 510px; }

.cell-7 {
  width: 595px;
  max-width: 595px; }

.cell-8 {
  width: 680px;
  max-width: 680px; }

.cell-9 {
  width: 765px;
  max-width: 765px; }

.cell-10 {
  width: 850px;
  max-width: 850px; }

.cell-11 {
  width: 935px;
  max-width: 935px; }

.cell-12 {
  width: 1020px;
  max-width: 1020px; }

.cell-13 {
  width: 1105px;
  max-width: 1105px; }

.cell-14 {
  width: 1190px;
  max-width: 1190px; }

.cell-15 {
  width: 1275px;
  max-width: 1275px; }

.cell,
.cell-16 {
  width: 1360px;
  max-width: 1360px; }

@media only screen and (max-width: 1360px) {
  .cell-1 {
    width: 6.25vw;
    max-width: 6.25vw; }
  .cell-2 {
    width: 12.5vw;
    max-width: 12.5vw; }
  .cell-3 {
    width: 18.75vw;
    max-width: 18.75vw; }
  .cell-4 {
    width: 25vw;
    max-width: 25vw; }
  .cell-5 {
    width: 31.25vw;
    max-width: 31.25vw; }
  .cell-6 {
    width: 37.5vw;
    max-width: 37.5vw; }
  .cell-7 {
    width: 43.75vw;
    max-width: 43.75vw; }
  .cell-8 {
    width: 50vw;
    max-width: 50vw; }
  .cell-9 {
    width: 56.25vw;
    max-width: 56.25vw; }
  .cell-10 {
    width: 62.5vw;
    max-width: 62.5vw; }
  .cell-11 {
    width: 68.75vw;
    max-width: 68.75vw; }
  .cell-12 {
    width: 75vw;
    max-width: 75vw; }
  .cell-13 {
    width: 81.25vw;
    max-width: 81.25vw; }
  .cell-14 {
    width: 87.5vw;
    max-width: 87.5vw; }
  .cell-15 {
    width: 93.75vw;
    max-width: 93.75vw; }
  .cell,
  .cell-16 {
    width: 100vw;
    max-width: 100vw; } }

/*
.@{cell} {
}
.generate-cell(@layout_column);
.generate-cell(@n, @i: 1) when (@i =< @n) {
    .@{cell}_@{i} {
    @j: @layout_column_width*@i;
    width:     @j;
    max-width: @j;
}
    .generate-cell(@n, (@i + 1));
}
@media only screen and (max-width: @layout_width) {
    @j: round(100vw/@layout_column, 4);
    .media-cell(@layout_column);
    .media-cell(@n, @i: 1) when (@i =< @n) {
    .@{cell}_@{i} {
    @k: @j*@i;
    width:     @k;
    max-width: @k;
}
    .media-cell(@n, (@i + 1));
}
}


$max-media: 1200px;
$min-media: 360px;

$step: ($max-media - $min-media)/($grid - 2);
.for-media(1);
.for-media($n, $i: $grid) when ($i > $n) {
    @media only screen and (max-width: $max-media - ($grid - $i)*$step) {// ($i*60px + 240px)
        $j: $i - 1;
        .grid {
            grid-template-columns: repeat($j, minmax(0, 1fr));
        }
        $cell: ~"cell-${i}";
        //.cell-@{i}, [class*="cell-${i}__"] {
        .${cell} {
            grid-column: span $j;
        }
        .for-media-cell(@grid);
        .for-media-cell(@m, @k: @i + 1) when (@k =< @m) {
            .cell-@{k}, [class*="cell-@{k}__"] {
                grid-column: span @j;
                //&:extend(.cell-@{i});
                &:extend(.@{cell});
            }
            .for-media-cell(@m, @k + 1);
        }
    }
    .for-media(@n, @i - 1);
}
*/
